def positive():  # середовище створює функцію positive()
    return 'POSITIVE'


def negative():  # середовище створює функцію negative()
    return 'NEGATIVE'


def test_input(string):
    string.strip()
    if (string[0] == '+' or string[0] == '-' or string[1:].isdigit())\
            and string[1:].isdigit() or '.' in string[1:]:
        if '.' in string:
            position = string.find('.') + 1
            if string[position:].isdigit():
                return True
        else:
            return True
    else:
        return False


def test():  # середовище створює функцію test()
    print('Input your digit')
    digit = input()

    if test_input(digit):
        if float(digit) > 0:
            return positive()
        else:
            return negative()

    else:
        print('You input STR, need INT not STR')
        test()


print(f'Your digit is {test()}')  # виконується виклик функції test()

# Після введеного числа, якщо воно позитивне чи негативне або дорівнює нулю, виконається виклик потрібної функції
# не залежно де ця функція знаходиться чи перед функцією з якої виконується виклик потрібної функції чи після
# функції з якої виконується виклик потрібної функції. Головне, щоб функця яка викликається з основної функції не
# була ініціалізована після виклику головної функції test()
#
# Завдання 2
#
# У програмуванні можна з однієї функції викликати іншу. Для
# ілюстрації цієї можливості напишіть програму за наступним описом.
#
# Основна гілка програми, крім заголовків функцій, складається з
# одного рядка коду. Це виклик функції test(). У ній запитується на
# введення ціле число. Якщо вона позитивна, то викликається функція
# positive(), тіло якої містить команду виведення на екран слова
# "Позитивне". Якщо число негативне, то викликається функція
# negative(), її тіло містить вираз виведення на екран слова "Негативне".
#
# Зрозуміло, що виклик test() повинен йти після визначення функцій.
#
# Проте чи має значення порядок визначення функцій? Тобто
# чи повинні визначення positive() і negative() передувати test() або
# можуть слідувати після нього? Перевірте вашу гіпотезу, змінивши оголошення
# функцій подекуди.
#
# Спробуйте пояснити результат, додавши коментарі до коду.
